{"version":3,"sources":["Components/Display.js","Components/Controls.js","Components/Settings.js","Components/TimeIntervals.js","App.js","serviceWorker.js","index.js"],"names":["Display","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","props","active","replace","str","toUpperCase","translateTime","timer","React","Component","Controls","onClick","startCountdown","stopCountdown","reset","Settings","_this","call","handleChange","bind","assertThisInitialized","handleClick","handleSettings","event","updateTimer","target","id","settings","document","getElementById","classList","contains","add","remove","for","type","defaultValue","onChange","TimeIntervals","src","setPomodoro","setShortBreak","setLongBreak","App","state","pomodoro","shortBreak","longBreak","countdownFunc","soundAlarm","setState","clearInterval","interval","oldTime","play","setInterval","mills","mins","Math","floor","secs","toFixed","milliVal","TimeIntervals_TimeIntervals","Display_Display","Controls_Controls","Settings_Settings","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f195e68d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Display extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='display-container'>\r\n        <p className='session-title'>{this.props.active.replace(/([A-Z])/, ' $1').replace(/^./, function(str){return str.toUpperCase()})}</p>\r\n        <p className='countdown-timer'>{this.props.translateTime(this.props.timer)}</p>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport class Controls extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='controls-container'>\r\n        <button onClick={this.props.startCountdown} className='control-button all-button'>Start</button>\r\n        <button onClick={this.props.stopCountdown} className='control-button all-button'>Stop</button>\r\n        <button onClick={this.props.reset} className='control-button all-button'>Reset</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport class Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleSettings = this.handleSettings.bind(this);\r\n  }\r\n  \r\n  handleChange(event) {\r\n    this.props.updateTimer(event.target.value, event.target.id)\r\n  }\r\n\r\n  handleClick() {\r\n  \tthis.props.reset();\r\n  \tthis.handleSettings();\r\n  }\r\n\r\n  handleSettings() {\r\n  \tvar settings = document.getElementById('settings');\r\n  \tif (settings.classList.contains('hide')) {\r\n  \t\tsettings.classList.add('show');\r\n  \t\tsettings.classList.remove('hide');\r\n  \t}\r\n  \telse if (settings.classList.contains('show')) {\r\n  \t\tsettings.classList.remove('show');\r\n  \t\tsettings.classList.add('hide');\r\n  \t}\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className='settings-container'>\r\n        <button className='settings-button' onClick={this.handleSettings}></button>\r\n        <div className='inputs-container hide' id='settings'>\r\n          <label for='pomodoro'>Pomodoro Length</label>\r\n          <input type='number' id='pomodoro-length' defaultValue='25' onChange={this.handleChange}/>\r\n          <label for='short-break-length'>Short Break Length</label>\r\n          <input type='number' id='short-break-length' defaultValue='5' onChange={this.handleChange} />\r\n          <label for='long-break-length'>Long Break Length</label>\r\n          <input type='number' id='long-break-length' defaultValue='10' onChange={this.handleChange} />\r\n        \r\n        <button className='confirm-button' onClick={this.handleClick}></button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport class TimeIntervals extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='time-interval-container'>\r\n        <h1 className='title'>Pomodoro Timer</h1>\r\n        <audio id='alarm' src='http://soundbible.com/grab.php?id=1133&type=mp3' />\r\n        <div className='interval-buttons-container'>\r\n          <button onClick={this.props.setPomodoro} className='interval-button all-button'>Pomodoro</button>\r\n          <button onClick={this.props.setShortBreak} className='interval-button all-button'>Short Break</button>\r\n          <button onClick={this.props.setLongBreak} className='interval-button all-button'>Long Break</button>\r\n        </div>\r\n      </div>\r\n      )\r\n  }\r\n}","import React from 'react';\nimport './App.css';\nimport { Display } from './Components/Display.js';\nimport { Controls } from './Components/Controls.js';\nimport { Settings } from './Components/Settings.js';\nimport { TimeIntervals } from './Components/TimeIntervals.js';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      timer: 0,\n      pomodoro: 1500000,\n      shortBreak: 300000,\n      longBreak: 600000,\n      active: 'pomodoro'\n    }\n    this.setPomodoro = this.setPomodoro.bind(this);\n    this.setShortBreak = this.setShortBreak.bind(this);\n    this.setLongBreak = this.setLongBreak.bind(this);\n    this.countdownFunc = this.countdownFunc.bind(this);\n    this.soundAlarm = this.soundAlarm.bind(this);\n    this.stopCountdown = this.stopCountdown.bind(this);\n    this.startCountdown = this.startCountdown.bind(this);\n    this.reset = this.reset.bind(this);\n    this.updateTimer = this.updateTimer.bind(this);\n    this.translateTime = this.translateTime.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      timer: this.state.pomodoro\n    })\n    \n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  \n  setPomodoro() {\n    this.stopCountdown();\n    this.setState({\n      timer: this.state.pomodoro,\n      active: 'pomodoro'\n    })\n    this.startCountdown();\n  }\n  \n  setShortBreak() {\n    this.stopCountdown();\n    this.setState({\n      timer: this.state.shortBreak,\n      active: 'shortBreak'\n    })\n    this.startCountdown();\n  }\n  \n  setLongBreak() {\n    this.stopCountdown();\n    this.setState({\n      timer: this.state.longBreak,\n      active: 'longBreak'\n    })\n    this.startCountdown();\n    \n  }\n  \n  \n  countdownFunc() {\n    var oldTime = this.state.timer\n    this.setState({\n      timer: oldTime - 1000\n    })\n    if (this.state.timer === 0) {\n      this.stopCountdown();\n      this.soundAlarm();\n    }\n  }\n  \n  soundAlarm() {\n    document.getElementById('alarm').play()\n  }\n  \n  stopCountdown() {\n    clearInterval(this.interval);\n  }\n  \n  reset() {\n    this.stopCountdown();\n    var active = this.state.active\n    this.setState({\n      timer: this.state[active]\n    })\n  }\n  \n  startCountdown() {\n    this.stopCountdown();\n    this.interval = setInterval(this.countdownFunc, 1000);\n  }\n  \n  translateTime(mills) {\n    var mins = Math.floor(mills / 60000);\n    var secs = ((mills % 60000) / 1000).toFixed(0);\n    return mins + \":\" + (secs < 10 ? '0' : '') + secs;\n  }\n  \n  updateTimer(value, id) {\n    var milliVal = value * 60 * 1000;\n    switch (id) {\n      case 'pomodoro-length':\n        this.setState({\n          pomodoro: milliVal,\n        })\n        \n        break;\n      case 'short-break-length':\n        this.setState({\n          shortBreak: milliVal\n        })\n        \n        break;\n      case 'long-break-length':\n        this.setState({\n          longBreak: milliVal\n        })\n        \n        break;\n      default:\n        break;\n    }\n  }\n  \n  render() {\n    return (\n    <div className='app-container'> \n        <TimeIntervals setPomodoro={this.setPomodoro} setShortBreak={this.setShortBreak} setLongBreak={this.setLongBreak}/>\n        <Display translateTime={this.translateTime} timer={this.state.timer} active={this.state.active}/>\n        <Controls stopCountdown={this.stopCountdown} startCountdown={this.startCountdown} reset={this.reset}/>\n        <Settings updateTimer={this.updateTimer} reset={this.reset}/>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}